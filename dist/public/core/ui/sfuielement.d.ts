import vec2 from '../math/vec2.js';
export default class sfuiElement {
    canvas: HTMLCanvasElement;
    ctx: CanvasRenderingContext2D;
    protected origin: vec2;
    protected isButton: boolean;
    protected hasToggle: boolean;
    protected isTooltip: boolean;
    protected active: boolean;
    protected title: string;
    protected titleOrigin: vec2;
    protected titleShowing: boolean;
    protected titleFontSize: number;
    protected initialized: boolean;
    protected size: vec2;
    protected outlineSize: vec2;
    protected outlineOrigin: vec2;
    protected hasImage: boolean;
    protected imageHTML: HTMLImageElement;
    protected imageSize: vec2;
    protected hasOutline: boolean;
    protected isMouseHovering: boolean;
    protected isHidden: boolean;
    protected backgroundColor: string;
    protected opacity: number;
    constructor(origin: vec2, title: string);
    update(dt: number): void;
    render(): void;
    getOrigin(): vec2;
    setOrigin(origin: vec2): void;
    setTitleOrigin(origin: vec2): void;
    getText(): string;
    setText(text: string): void;
    setFontSize(size: number): void;
    setOutlineSize(size: vec2): void;
    setOutlineOrigin(origin: vec2): void;
    getTextWidth(): number;
    setSize(size: vec2): void;
    getSize(): vec2;
    getImageSize(): vec2;
    setBackgroundColor(color: string): void;
    setBackgroundOpacity(opacity: number): void;
    setImage(src: string): void;
    setOutline(bool: boolean): void;
    protected onImageLoad(): void;
    isInitialized(): boolean;
    isActive(): boolean;
    enableTitle(): void;
    setAsTooltip(): void;
    setAsButton(): void;
    setAsToggle(): void;
    mouseMove(mousePos: vec2): void;
    mouseDown(mousePos: vec2): void;
    isHovering(): boolean;
    setHovering(bool: boolean): void;
    hide(): void;
    show(): void;
    toggleActive(): void;
}
